<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yff.base.mapper.LoginInfoMapper">
    <resultMap id="BaseResultMap" type="com.yff.base.domain.LoginInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="user_type" jdbcType="TINYINT" property="userType"/>
        <result column="admin" jdbcType="BIT" property="admin"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, state, user_type, admin
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from login_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from login_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.yff.base.domain.LoginInfo"
            useGeneratedKeys="true">
    insert into login_info (username, password, state, 
      user_type, admin)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{userType,jdbcType=TINYINT}, #{admin,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.yff.base.domain.LoginInfo"
            useGeneratedKeys="true">
        insert into login_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="admin != null">
                admin,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=TINYINT},
            </if>
            <if test="admin != null">
                #{admin,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yff.base.domain.LoginInfo">
        update login_info
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=TINYINT},
            </if>
            <if test="admin != null">
                admin = #{admin,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yff.base.domain.LoginInfo">
    update login_info
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      user_type = #{userType,jdbcType=TINYINT},
      admin = #{admin,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <select id="getCountByUsername" parameterType="string" resultType="int">
    SELECT COUNT(id) FROM  login_info where username=#{username}
  </select>

    <select id="login" parameterType="map" resultType="com.yff.base.domain.LoginInfo">
        SELECT
        <include refid="Base_Column_List"/>
        from login_info
        where username=#{username} AND password=#{password} AND user_type = #{userType}
    </select>


    <select id="getCountByUserType" parameterType="int" resultType="int">
        SELECT count(id)
        FROM login_info
        where user_type = #{userType}
    </select>
</mapper>