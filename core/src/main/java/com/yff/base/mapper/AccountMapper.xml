<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yff.base.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.yff.base.domain.Account">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="trade_password" jdbcType="VARCHAR" property="tradePassword" />
    <result column="usable_amount" jdbcType="DECIMAL" property="usableAmount" />
    <result column="freezed_amount" jdbcType="DECIMAL" property="freezedAmount" />
    <result column="borrow_limit" jdbcType="DECIMAL" property="borrowLimit" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="un_receive_interest" jdbcType="DECIMAL" property="unReceiveInterest" />
    <result column="un_receive_principal" jdbcType="DECIMAL" property="unReceivePrincipal" />
    <result column="un_return_amount" jdbcType="DECIMAL" property="unReturnAmount" />
    <result column="remain_borrow_limit" jdbcType="DECIMAL" property="remainBorrowLimit" />
  </resultMap>
  <sql id="Base_Column_List">
    id, trade_password, usable_amount, freezed_amount, borrow_limit, version, un_receive_interest, 
    un_receive_principal, un_return_amount, remain_borrow_limit
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.yff.base.domain.Account" useGeneratedKeys="true">
    insert into account (id,trade_password, usable_amount, freezed_amount,
      borrow_limit, version, un_receive_interest, 
      un_receive_principal, un_return_amount, remain_borrow_limit
      )
    values (#{id,jdbcType=BIGINT},#{tradePassword,jdbcType=VARCHAR}, #{usableAmount,jdbcType=DECIMAL}, #{freezedAmount,jdbcType=DECIMAL},
      #{borrowLimit,jdbcType=DECIMAL}, 0, #{unReceiveInterest,jdbcType=DECIMAL},
      #{unReceivePrincipal,jdbcType=DECIMAL}, #{unReturnAmount,jdbcType=DECIMAL}, #{remainBorrowLimit,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.yff.base.domain.Account" useGeneratedKeys="true">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tradePassword != null">
        trade_password,
      </if>
      <if test="usableAmount != null">
        usable_amount,
      </if>
      <if test="freezedAmount != null">
        freezed_amount,
      </if>
      <if test="borrowLimit != null">
        borrow_limit,
      </if>
      version,
      <if test="unReceiveInterest != null">
        un_receive_interest,
      </if>
      <if test="unReceivePrincipal != null">
        un_receive_principal,
      </if>
      <if test="unReturnAmount != null">
        un_return_amount,
      </if>
      <if test="remainBorrowLimit != null">
        remain_borrow_limit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT}
      </if>
      <if test="tradePassword != null">
        #{tradePassword,jdbcType=VARCHAR},
      </if>
      <if test="usableAmount != null">
        #{usableAmount,jdbcType=DECIMAL},
      </if>
      <if test="freezedAmount != null">
        #{freezedAmount,jdbcType=DECIMAL},
      </if>
      <if test="borrowLimit != null">
        #{borrowLimit,jdbcType=DECIMAL},
      </if>
      0,
      <if test="unReceiveInterest != null">
        #{unReceiveInterest,jdbcType=DECIMAL},
      </if>
      <if test="unReceivePrincipal != null">
        #{unReceivePrincipal,jdbcType=DECIMAL},
      </if>
      <if test="unReturnAmount != null">
        #{unReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="remainBorrowLimit != null">
        #{remainBorrowLimit,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yff.base.domain.Account">
    update account
    <set>
      <if test="tradePassword != null">
        trade_password = #{tradePassword,jdbcType=VARCHAR},
      </if>
      <if test="usableAmount != null">
        usable_amount = #{usableAmount,jdbcType=DECIMAL},
      </if>
      <if test="freezedAmount != null">
        freezed_amount = #{freezedAmount,jdbcType=DECIMAL},
      </if>
      <if test="borrowLimit != null">
        borrow_limit = #{borrowLimit,jdbcType=DECIMAL},
      </if>
      version = version + 1,
      <if test="unReceiveInterest != null">
        un_receive_interest = #{unReceiveInterest,jdbcType=DECIMAL},
      </if>
      <if test="unReceivePrincipal != null">
        un_receive_principal = #{unReceivePrincipal,jdbcType=DECIMAL},
      </if>
      <if test="unReturnAmount != null">
        un_return_amount = #{unReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="remainBorrowLimit != null">
        remain_borrow_limit = #{remainBorrowLimit,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT} AND  version = #{version}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yff.base.domain.Account">
    update account
    set trade_password = #{tradePassword,jdbcType=VARCHAR},
      usable_amount = #{usableAmount,jdbcType=DECIMAL},
      freezed_amount = #{freezedAmount,jdbcType=DECIMAL},
      borrow_limit = #{borrowLimit,jdbcType=DECIMAL},
      version = version + 1,
      un_receive_interest = #{unReceiveInterest,jdbcType=DECIMAL},
      un_receive_principal = #{unReceivePrincipal,jdbcType=DECIMAL},
      un_return_amount = #{unReturnAmount,jdbcType=DECIMAL},
      remain_borrow_limit = #{remainBorrowLimit,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT} AND  version = #{version}
  </update>
</mapper>